{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajayr\\\\OneDrive\\\\Desktop\\\\NewFolder\\\\monsters-rolodex\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Component, useEffect } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list-component';\nimport SearchBox from './components/search-box/search-box-component';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [monsters, setMonsters] = useState([]);\n  const [displayMonsters, setDisplayMonsters] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users/').then(x => x.json()).then(y => {\n      setMonsters(y);\n      setDisplayMonsters(y);\n      console.log(y);\n    });\n  });\n};\n_s(App, \"aSCicDAwtoVVjiS6AWxxprubLaA=\");\n_c = App;\nconst onSearchChange = event => {\n  if (event.target.value.length !== 0) {\n    let filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(event.target.value.toLowerCase()));\n    setDisplayMonsters(filteredMonsters);\n  } else {\n    setDisplayMonsters(monsters);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      classname: \"app-title eater-regular\",\n      children: \"Monsters Rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      onSearchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      displayMonsters: displayMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\nexport default App;\n\n//class App extends Component {\n\n//   constructor(){\n//     super();\n\n//     this.state = {\n//       monsters : [],\n//       displayMonsters: []\n//     }\n//   }\n\n//   componentDidMount(){\n//     fetch('https://jsonplaceholder.typicode.com/users/')\n//     .then(x => x.json())\n//     .then(y => this.setState(()=>{\n//       return {monsters: y, displayMonsters: y}\n//     }, ()=>{\n//       console.log(this.state.monsters)\n//     }))\n//   }\n\n// onSearchChange = (event) => {\n//   if(event.target.value.length !== 0){\n//     let filteredMonsters = this.state.monsters.filter(monster => monster.name.toLowerCase().includes(event.target.value.toLowerCase()) )\n//     this.setState({displayMonsters: filteredMonsters})\n//   }else{\n//     this.setState({displayMonsters: this.state.monsters})\n//   }\n// }\n\n//   render(){\n\n//     const {onSearchChange} = this\n//     const {displayMonsters} = this.state\n\n//     return (\n//       <div className=\"App\">\n//         <h1 classname=\"app-title eater-regular\">Monsters Rolodex</h1>\n//         <SearchBox onSearchChange={onSearchChange}></SearchBox>\n//         <CardList displayMonsters={displayMonsters}></CardList>\n\n//       </div>\n//     );\n//   }\n\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Component","useEffect","CardList","SearchBox","React","useState","jsxDEV","_jsxDEV","App","_s","monsters","setMonsters","displayMonsters","setDisplayMonsters","fetch","then","x","json","y","console","log","_c","onSearchChange","event","target","value","length","filteredMonsters","filter","monster","name","toLowerCase","includes","className","children","classname","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["C:/Users/ajayr/OneDrive/Desktop/NewFolder/monsters-rolodex/src/App.js"],"sourcesContent":["import {Component, useEffect} from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list-component';\nimport SearchBox from './components/search-box/search-box-component';\nimport React from 'react';\nimport { useState } from 'react';\n\n\nconst App = () => {\n\n  const [monsters, setMonsters] = useState([])\n  const [displayMonsters, setDisplayMonsters] = useState([])\n\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users/')\n    .then(x => x.json())\n    .then(y => {\n      setMonsters(y)\n      setDisplayMonsters(y)\n      console.log(y)\n    })})\n  }\n\n\n  const onSearchChange = (event) => {\n    if(event.target.value.length !== 0){\n      let filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(event.target.value.toLowerCase()) )\n      setDisplayMonsters(filteredMonsters)\n    }else{\n      setDisplayMonsters(monsters)\n    }\n\n\n  return <div className=\"App\">\n         <h1 classname=\"app-title eater-regular\">Monsters Rolodex</h1>\n         <SearchBox onSearchChange={onSearchChange}></SearchBox>\n         <CardList displayMonsters={displayMonsters}></CardList>\n  </div>\n\n}\n\nexport default App\n\n\n\n\n\n\n\n\n\n//class App extends Component {\n\n//   constructor(){\n//     super();\n\n//     this.state = {\n//       monsters : [],\n//       displayMonsters: []\n//     }\n//   }\n\n//   componentDidMount(){\n//     fetch('https://jsonplaceholder.typicode.com/users/')\n//     .then(x => x.json())\n//     .then(y => this.setState(()=>{\n//       return {monsters: y, displayMonsters: y}\n//     }, ()=>{\n//       console.log(this.state.monsters)\n//     }))\n//   }\n\n\n  // onSearchChange = (event) => {\n  //   if(event.target.value.length !== 0){\n  //     let filteredMonsters = this.state.monsters.filter(monster => monster.name.toLowerCase().includes(event.target.value.toLowerCase()) )\n  //     this.setState({displayMonsters: filteredMonsters})\n  //   }else{\n  //     this.setState({displayMonsters: this.state.monsters})\n  //   }\n  // }\n\n//   render(){\n\n//     const {onSearchChange} = this\n//     const {displayMonsters} = this.state\n\n//     return (\n//       <div className=\"App\">\n//         <h1 classname=\"app-title eater-regular\">Monsters Rolodex</h1>\n//         <SearchBox onSearchChange={onSearchChange}></SearchBox>\n//         <CardList displayMonsters={displayMonsters}></CardList>\n\n//       </div>\n//     );\n//   }\n\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;AACpE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAG1DJ,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,6CAA6C,CAAC,CACnDC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAACG,CAAC,IAAI;MACTP,WAAW,CAACO,CAAC,CAAC;MACdL,kBAAkB,CAACK,CAAC,CAAC;MACrBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB,CAAC,CAAC;EAAA,CAAC,CAAC;AACN,CAAC;AAAAT,EAAA,CAdGD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAiBP,MAAMc,cAAc,GAAIC,KAAK,IAAK;EAChC,IAAGA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAC;IACjC,IAAIC,gBAAgB,GAAGjB,QAAQ,CAACkB,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACT,KAAK,CAACC,MAAM,CAACC,KAAK,CAACM,WAAW,CAAC,CAAC,CAAE,CAAC;IACzHlB,kBAAkB,CAACc,gBAAgB,CAAC;EACtC,CAAC,MAAI;IACHd,kBAAkB,CAACH,QAAQ,CAAC;EAC9B;EAGF,oBAAOH,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpB3B,OAAA;MAAI4B,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7DhC,OAAA,CAACJ,SAAS;MAACmB,cAAc,EAAEA;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACvDhC,OAAA,CAACL,QAAQ;MAACU,eAAe,EAAEA;IAAgB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAER,CAAC;AAED,eAAe/B,GAAG;;AAUlB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AAAA,IAAAa,EAAA;AAAAmB,YAAA,CAAAnB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}